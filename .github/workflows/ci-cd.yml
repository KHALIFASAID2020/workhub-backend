name: CI-CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  # 1) Build + tests + couverture + analyse Sonar (via Maven)
  build-test-sonar:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Build & test (JaCoCo)
        run: mvn -B -Psonar verify

      - name: SonarCloud (Maven)
        run: mvn -B -Psonar sonar:sonar -Dsonar.token=${{ secrets.SONAR_TOKEN }}

  # 2) Build & push image Docker vers GHCR
    docker-push:
    needs: build-test-sonar
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Compute image meta (tag + owner lower)
        id: meta
        shell: bash
        run: |
          echo "TAG=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT
          echo "OWNER_LC=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_OUTPUT

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ steps.meta.outputs.OWNER_LC }}/workhub-backend:${{ steps.meta.outputs.TAG }}
            ghcr.io/${{ steps.meta.outputs.OWNER_LC }}/workhub-backend:latest


  # 3) Déploiement sur la VM (test des secrets dans l'étape via env.*)
  deploy:
    needs: docker-push
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    env:
      VPS_HOST: ${{ secrets.VPS_HOST }}
      VPS_USER: ${{ secrets.VPS_USER }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
    steps:
      - name: Skip deploy if secrets are missing
        if: ${{ env.VPS_HOST == '' || env.VPS_USER == '' || env.SSH_PRIVATE_KEY == '' }}
        run: echo "Deploy secrets missing; skipping deployment." && exit 0

      - name: Deploy to VPS over SSH
        if: ${{ env.VPS_HOST != '' && env.VPS_USER != '' && env.SSH_PRIVATE_KEY != '' }}
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.VPS_HOST }}
          username: ${{ env.VPS_USER }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            TAG=$(echo $GITHUB_SHA | cut -c1-8)
            sudo /opt/workhub/deploy.sh "$TAG"
